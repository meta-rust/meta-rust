From c43717223b5f1ddec0a35d32ff7065e1be2efe8f Mon Sep 17 00:00:00 2001
From: Cody P Schafer <dev@codyps.com>
Date: Mon, 9 Mar 2015 16:33:27 -0400
Subject: [PATCH 12/13] filesearch: add info! to show path searching

---
 src/librustc/metadata/filesearch.rs | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/librustc/metadata/filesearch.rs b/src/librustc/metadata/filesearch.rs
index 2e1e89c..30800fe 100644
--- a/src/librustc/metadata/filesearch.rs
+++ b/src/librustc/metadata/filesearch.rs
@@ -46,6 +46,7 @@ impl<'a> FileSearch<'a> {
         let mut found = false;
 
         for (path, kind) in self.search_paths.iter(self.kind) {
+            info!("Searching {:?} for {:?}", path, kind);
             match f(path, kind) {
                 FileMatches => found = true,
                 FileDoesntMatch => ()
@@ -57,6 +58,7 @@ impl<'a> FileSearch<'a> {
         let tlib_path = make_target_lib_path(self.sysroot,
                                              self.triple);
         if !visited_dirs.contains(&tlib_path) {
+            info!("Searching {:?} for {:?}", tlib_path, PathKind::All);
             match f(&tlib_path, PathKind::All) {
                 FileMatches => found = true,
                 FileDoesntMatch => ()
@@ -76,6 +78,7 @@ impl<'a> FileSearch<'a> {
                     visited_dirs.insert(tlib_path.clone());
                     // Don't keep searching the RUST_PATH if one match turns up --
                     // if we did, we'd get a "multiple matching crates" error
+                    info!("Searching {:?} for {:?}", tlib_path, PathKind::All);
                     match f(&tlib_path, PathKind::All) {
                        FileMatches => {
                            break;
-- 
1.9.1

